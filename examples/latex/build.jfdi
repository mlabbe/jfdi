#    _______________ _____ 
#   |_  |  ___|  _  \_   _|
#     | | |_  | | | | | |  
#     | |  _| | | | | | |  
# /\__/ / |   | |/ / _| |_ 
# \____/\_|   |___/  \___/ 
#
# NOTE:
# if you do not have jfdi.py, run this script with python to get it.

JFDI_VERSION = 1

import shutil

# called at the start of the build
def start_build():
    path = shutil.which("pdflatex")
    if not path:
        die("pdflatex not in path.")

# return a list of files
def list_input_files():
    return "*.tex"


# return command to build single file in_path or None to skip
def build_this(in_path):
    return 'pdflatex %s' % in_path

# called after every input file has been built
def end_build(in_files):
    pass

# called when the user requests --clean
def clean(in_files):
    for file in in_files:
        aux = file.replace(ext(file), '.aux')
        log = file.replace(ext(file), '.log')
        pdf = file.replace(ext(file), '.pdf')
        rm(aux)
        rm(log)
        rm(pdf)
    
#
# main -- installs build system if build script is run directly
#
# generated code: do not edit this
#
if __name__ == '__main__':
    import sys
    import os.path
    import urllib.request
    
    print("You have run the build script directly.")
    print("Expected Usage: python jfdi.py -f %s" %
          sys.argv[0])

    DST_FILENAME = 'dl_jfdi.py'
    if os.path.exists(DST_FILENAME):
        sys.exit(0)
    print("Do you want to download the JFDI build script?")
    yesno = input('Y/n -->')
    if yesno == 'n':
        sys.exit(0)

    print("downloading jfdi.py")
    url = "https://raw.githubusercontent.com/mlabbe/jfdi/master/jfdi.py"
    urllib.request.urlretrieve(url, DST_FILENAME)
    
    print("%s downloaded." % DST_FILENAME)
    print("Usage: python %s -f %s" %
          (DST_FILENAME, sys.argv[0]))
    sys.exit(0)

